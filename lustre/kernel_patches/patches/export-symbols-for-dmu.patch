diff -rupN linux-2.6.18-164.6.1_a/fs/proc/mmu.c linux-2.6.18-164.6.1_b/fs/proc/mmu.c
--- linux-2.6.18-164.6.1_a/fs/proc/mmu.c	2010-07-20 12:15:18.000000000 +0530
+++ linux-2.6.18-164.6.1_b/fs/proc/mmu.c	2010-07-20 12:31:06.000000000 +0530
@@ -75,3 +75,4 @@ void get_vmalloc_info(struct vmalloc_inf
 		read_unlock(&vmlist_lock);
 	}
 }
+EXPORT_SYMBOL(get_vmalloc_info);
diff -rupN linux-2.6.18-164.6.1_a/kernel/sched.c linux-2.6.18-164.6.1_b/kernel/sched.c
--- linux-2.6.18-164.6.1_a/kernel/sched.c	2010-07-20 12:19:16.000000000 +0530
+++ linux-2.6.18-164.6.1_b/kernel/sched.c	2010-07-20 12:32:05.000000000 +0530
@@ -1037,10 +1037,11 @@ static inline void resched_task(struct t
  * task_curr - is this task currently executing on a CPU?
  * @p: the task in question.
  */
-inline int task_curr(const struct task_struct *p)
+int task_curr(const struct task_struct *p)
 {
 	return cpu_curr(task_cpu(p)) == p;
 }
+EXPORT_SYMBOL(task_curr);
 
 /* Used instead of source_load when we know the type == 0 */
 unsigned long weighted_cpuload(const int cpu)

