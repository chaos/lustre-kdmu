diff -rupN linux-2.6.18-164.6.1_1//fs/ext4/ialloc.c linux-2.6.18-164.6.1_2//fs/ext4/ialloc.c
--- linux-2.6.18-164.6.1_1//fs/ext4/ialloc.c	2010-03-31 17:42:50.000000000 +0530
+++ linux-2.6.18-164.6.1_2//fs/ext4/ialloc.c	2010-03-31 17:43:22.000000000 +0530
@@ -622,11 +622,14 @@ struct inode *ext4_new_inode_goal(handle
 	sb = dir->i_sb;
 	trace_mark(ext4_request_inode, "dev %s dir %lu mode %d", sb->s_id,
 		   dir->i_ino, mode);
+	sbi = EXT4_SB(sb);
+	if (sbi->s_max_dir_size > 0 && i_size_read(dir) >= sbi->s_max_dir_size)
+		return ERR_PTR(-EFBIG);
+
 	inode = new_inode(sb);
 	if (!inode)
 		return ERR_PTR(-ENOMEM);
 	ei = EXT4_I(inode);
-	sbi = EXT4_SB(sb);
 
 	if (goal)
		goal = sbi->s_inode_goal;
diff -rupN linux-2.6.18-164.6.1_1//fs/ext4/super.c linux-2.6.18-164.6.1_2//fs/ext4/super.c
--- linux-2.6.18-164.6.1_1//fs/ext4/super.c	2010-03-31 17:42:50.000000000 +0530
+++ linux-2.6.18-164.6.1_2//fs/ext4/super.c	2010-03-31 17:45:32.000000000 +0530
@@ -40,6 +40,7 @@
 EXT4_RW_ATTR_SBI_UI(mb_order2_req, s_mb_order2_reqs);
 EXT4_RW_ATTR_SBI_UI(mb_stream_req, s_mb_stream_request);
 EXT4_RW_ATTR_SBI_UI(mb_group_prealloc, s_mb_group_prealloc);
+EXT4_RW_ATTR_SBI_UI(max_dir_size, s_max_dir_size);
 
 static struct attribute *ext4_attrs[] = {
	ATTR_LIST(delayed_allocation_blocks),
@@ -48,6 +48,7 @@
	ATTR_LIST(mb_order2_req),
	ATTR_LIST(mb_stream_req),
	ATTR_LIST(mb_group_prealloc),
+	ATTR_LIST(max_dir_size),
	NULL,
 };
 
diff -rupN linux-2.6.18-164.6.1_1//fs/ext4/ext4_sb.h linux-2.6.18-164.6.1_2//fs/ext4/ext4_sb.h
--- linux-2.6.18-164.6.1_1//fs/ext4/ext4.h	2010-03-31 17:42:50.000000000 +0530
+++ linux-2.6.18-164.6.1_2//fs/ext4/ext4.h	2010-03-31 17:43:22.000000000 +0530
@@ -119,6 +119,7 @@ struct ext4_sb_info {
 	/* where last allocation was done - for stream allocation */
 	unsigned long s_mb_last_group;
 	unsigned long s_mb_last_start;
+	unsigned long s_max_dir_size;
 
 	/* history to debug policy */
 	struct ext4_mb_history *s_mb_history;
